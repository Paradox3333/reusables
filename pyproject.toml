[build-system]
requires = ["uv_build >= 0.8.17, <0.9.0"]
build-backend = "uv_build"

[project]
name = "..."
version = "0.1.0"
description = "..."
readme = "README.md"
requires-python = ">=3.11"
license = "..."
authors = [
  { name = "...", email = "..." }
]
maintainers = [
  {name = "...", email = "..."}
]


keywords = ["ai", "ml"]
classifiers = [
  "Development Status :: 1 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Libraries",
]

[project.urls]
Repository = "..."
Documentation = "..."
Changelog = "..."
Releases = "..."
Discord = "..."

# Runtime deps
dependencies = [
  "pydantic>=2.8",
]

# Installable extras (published “extras”)
[project.optional-dependencies]
viz = ["matplotlib>=3.9"]
gpu = ["torch>=2.4"]

[project.scripts]
yourcli = "yourpkg.cli:main"

# uv dependency groups (local dev)
[dependency-groups]
dev = [
  { include-group = "lint" },
  { include-group = "test" },
  { include-group = "types" },
  { include-group = "docs" },
]
lint = [
  "ruff>=0.6.9",
]
test = [
  "pytest>=8.3",
  "pytest-cov>=5.0",
]
types = [
  "mypy>=1.11",
  "types-requests",
]
docs = [
  "sphinx>=8.1",
]
bench = ["pytest-benchmark>=4.0"]

# Per-group Python requirements (when tools need newer Python)
[tool.uv.dependency-groups]
docs = { requires-python = ">=3.12" }

# Not shipped to PyPI
[tool.uv]
# install these groups by default on `uv sync` / `uv run`
default-groups = ["dev"]
